version: "3"

services:
  postgresql:
    image: postgres:16
    container_name: postgresql
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - koupit-network

  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: keycloak
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=password
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HTTP_ENABLED=true
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgresql:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_HEALTH_ENABLED=true
    command:
      -v start --import-realm
    volumes:
      - ./docker/keycloak/realm.json:/opt/keycloak/data/import/realm.json
    depends_on:
      postgresql:
        condition: service_started
    networks:
      - koupit-network
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 30s
      timeout: 10s
      retries: 10

  koupit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: koupit
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_HOST=keycloak:8080
    depends_on:
      keycloak:
        condition: service_healthy
      postgresql:
        condition: service_started
    networks:
      - koupit-network

volumes:
  postgres-data:

networks:
  koupit-network:
    driver: bridge
